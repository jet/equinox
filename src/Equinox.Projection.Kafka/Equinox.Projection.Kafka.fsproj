<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>netstandard2.0;net461</TargetFrameworks>
    <GenerateDocumentationFile Condition=" '$(Configuration)' == 'Release' ">true</GenerateDocumentationFile>
    <WarningLevel>5</WarningLevel>
    <IsTestProject>false</IsTestProject>
    <DisableImplicitFSharpCoreReference>true</DisableImplicitFSharpCoreReference>
    <DisableImplicitSystemValueTupleReference>true</DisableImplicitSystemValueTupleReference>
  </PropertyGroup>

  <ItemGroup>
    <Compile Include="Infrastructure.fs" />
    <Compile Include="Kafka.fs" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.0.0-beta-63127-02" PrivateAssets="All" />
    <PackageReference Include="MinVer" Version="1.0.0-beta.2" PrivateAssets="All" />

    <PackageReference Include="FSharp.Core" Version="3.1.2.5" Condition=" '$(TargetFramework)' != 'netstandard2.0' " />
    <PackageReference Include="FSharp.Core" Version="4.3.4" Condition=" '$(TargetFramework)' == 'netstandard2.0' " />

    <PackageReference Include="Confluent.Kafka" Version="1.0.0-beta2" />
    <!-- TODO remove special casing
         While the general policy is to use 11.0.2 across the board for consistency (11.0.2 being the first version that cleanly supports netstandard2.0),
         in this case we're relaxing the constraint for net461 so as to not trigger a set of transitive dependency updates at the present time
         should also be able to remove [<Trait("KnownFailOn","Mono")>] in JsonConverterTests when this special casing goes away -->
    <PackageReference Include="Newtonsoft.Json" Version="10.0.3" Condition=" '$(TargetFramework)' != 'netstandard2.0' " />
    <PackageReference Include="Newtonsoft.Json" Version="11.0.2" Condition=" '$(TargetFramework)' == 'netstandard2.0' " />
    <PackageReference Include="Serilog" Version="2.7.1" />
  </ItemGroup>

</Project>
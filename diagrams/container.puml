@startuml
!includeurl https://raw.githubusercontent.com/skleanthous/C4-PlantumlSkin/master/build/output/c4.puml

title Containers Diagram for Equinox (+Propulsion)
caption Packages / Elements breakdown of an event sourced system using Equinox

together {
    frame "Caches" <<External Container>> as caches {
        database "REDIS"    as red <<External>>
        database "SQL"      as sql <<External>>
        database "CosmosDB" as cdb <<External>>
        database "etc etc"  as etc <<External>>
    }
    frame "Services" <<Expanded>> as services {
        rectangle "Equinox" <<Component>> as equinox
        rectangle "AggregateA" <<Container>>
        rectangle "AggregateB" <<Container>>
    }
    actor "Applications" as apps <<Internal>>
}

rectangle "Ingesters" as ingesters <<External System>> 
rectangle "Input Feeds" as sources <<External System>> 
rectangle "Publishers" as projectors <<External System>> 
rectangle "Output Feeds" as sinks <<External System>> 
rectangle "Reactors" as reactors <<External System>> 

frame "Stores" as stores <<Expanded>> {
    frame "Cosmos" as cosmos <<Internal>> {
        rectangle "Equinox.Cosmos" <<Component>> as cs
        rectangle "Propulsion.Cosmos" <<External Component>> as cfp
        rectangle "Azure.Cosmos" <<ExternalComponent>> as cc
    }
    frame "EventStore" <<Internal>> {
        rectangle "Equinox.EventStore" <<Component>> as es
        rectangle "Propulsion.EventStore" <<External Component>> as all
        rectangle "EventStore.ClientAPI" <<External Component>> as esc
    }
    frame "Integration Test Support" <<Internal>> {
        rectangle "Equinox.MemoryStore" <<Component>> as ms 
    }
    interface IStream <<Component>>
    rectangle "Equinox.Core" as core <<External>> {
        rectangle "System.MemoryCache" <<External Container>>
        interface ICache <<Component>>
    }
    frame "SqlStreamStore" as ssss <<Internal>> {
        rectangle "Equinox.SqlStreamStore.MsSql" <<Component>> as ssm
        rectangle "Equinox.SqlStreamStore.MySql" <<Component>> as ssy
        rectangle "Equinox.SqlStreamStore.Postgres" <<Component>> as ssp
        rectangle "Equinox.SqlStreamStore" <<External Component>> as sss
        rectangle "SqlStreamStore" <<External Component>>
    }
}

AggregateB -R-> equinox    : uses
equinox     <-> IStream    : Query/\nTransact
AggregateA -L-> equinox    : uses

ingesters  <.R. sources    : consume
ingesters    -> AggregateA : ingest into
ingesters  .D.> caches     : ingest into

apps       <.   caches     : reference\neventually\nconsistent
apps        <-> AggregateB : transact\nagainst

stores     .U.> projectors : are followed by
stores     .U.> reactors   : trigger

projectors   .> sinks      : emit notifications to
projectors <--  cfp        : can feed from
projectors <--  all        : can feed from

reactors  <-U-> AggregateB : feed back into
reactors   .L.> sinks      : emit summaries to
reactors   .U.> caches     : maintain views in
reactors   <-   ms         : can react to
reactors   <-   cfp        : can react to
reactors   <-   all        : can react to

ms         .L.> IStream    : implements
es           -> ICache
es           .> IStream    : implements
es           -> esc
cs          --> ICache
cs           .> IStream    : implements
cs          <-> cc
sss          -> ICache
sss          .> IStream    : implements

ssm          -> sss
ssy          -> sss
ssp          -> sss
sss         <-> SqlStreamStore

ingesters  -[hidden]D-> apps
projectors -[hidden]D-> es
projectors -[hidden]U-> services
IStream    -[hidden]D-> ssss
red        -[hidden]R-> sql
sql        -[hidden]R-> cdb
cdb        -[hidden]R-> etc

@enduml
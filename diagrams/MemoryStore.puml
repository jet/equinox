@startuml
!includeurl https://raw.githubusercontent.com/skleanthous/C4-PlantumlSkin/master/build/output/c4.puml

title Component diagram for Equinox.MemoryStore
caption Moving parts for an integration test scenario using MemoryStore in lieu of a Durable Store

rectangle "Application's Consistent Processing Logic" <<External Container>> {
    rectangle aggregate <<Component>> [
        Aggregate / Service

        Events: codec
        Fold: initial, fold
        interpret / decide
        Service
    ]
    rectangle stream <<Component>> [
        Equinox.Stream
    ]
    interface IStream <<Component>>
}

actor "Integration\nTests" <<Person>> as tests

rectangle "System Under Test + Simulators" <<Expanded>> {
    rectangle reactors <<Container>> [
        **Reactors Under Test**
    ]
    rectangle ingesters <<Container>> [
        **Ingesters Under Test**
    ]
    database caches <<External Container>> [
        **Read Model Simulators**
    ]
    rectangle "Memory Store" <<Container>> {
        interface IObservable <<Component>>
        rectangle eqxms <<Component>> [
            Equinox.MemoryStore
        ]
        database eqxmsdict <<Component>> [
            **ConcurrentDictionary**
            StreamName -> TimelineEvent<T>
        ]
    }
    rectangle inputs <<Component>> [
        **Input Simulators**
    ]
}

tests     <-->  aggregate   : transact\nagainst
tests     <..   caches      : may probe\neventually\nconsistent
tests       --> eqxms       : may validate\nby probing

aggregate <.R.> stream      : Transact/\nQuery
stream     .R.> IStream     : Load/\nTrySync

eqxms      .U.> IStream     : implements
eqxms      -R-> eqxmsdict   : has a\nvolatile
eqxms      .L.> IObservable : feeds

ingesters <-U-> aggregate   : run transactions against
ingesters   --> caches      : maintain\nviews\nin
ingesters <--   inputs      : feed into

reactors  <-R-  IObservable : can subscribe to\n(TODO)
reactors  <-->  aggregate   : run transactions against
reactors    --> caches      : maintain\nviews\nin

@enduml
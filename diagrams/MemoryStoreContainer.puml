@startuml
!includeurl https://raw.githubusercontent.com/skleanthous/C4-PlantumlSkin/master/build/output/c4.puml

title Container diagram for Equinox.MemoryStore
caption High level layout of an integration test scenario using MemoryStore in lieu of a Durable Store

actor "Integration\nTests" <<Person>> as tests

rectangle "Equinox.MemoryStore" <<Container>> {
    interface IObservable <<Component>>
    rectangle eqxms <<Component>> [
        Equinox.MemoryStore
    ]
}

database caches <<Container>> [
    **Read Model Simulators**
    **and/or Concrete Stores**
]

rectangle "System Under Test + Simulators" <<Container>> {
    rectangle reactors <<Container>> [
        **Reactors Under Test**
    ]
    rectangle "Application Consistent Processing Logic Under Test" <<Container>> {
        rectangle aggregate <<Component>> [
            Aggregate / Service
        ]
        interface IStream <<Component>>
    }
    rectangle ingesters <<Container>> [
        **Ingesters Under Test**
    ]
    rectangle inputs <<Component>> [
        **Input Simulators**
    ]
}

tests     <-->  aggregate   : transact\nagainst
tests     <..   caches      : may probe\neventually\nconsistent
tests       --> eqxms       : may validate\nby probing

aggregate <.R.> IStream      : Transact/\nQuery

eqxms      ..> IStream     : implements
eqxms      ..> IObservable : feeds\n(TODO)

ingesters -U-> aggregate   : run transactions against
ingesters   -U-> caches      : maintain\nviews\nin
ingesters <-L-   inputs      : feed into

reactors  <--  IObservable : can subscribe to\n(TODO)
reactors  <-U->  aggregate   : run transactions against
reactors   -->  caches      : maintain\nviews\nin

@enduml
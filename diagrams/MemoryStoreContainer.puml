@startuml
!includeurl https://raw.githubusercontent.com/skleanthous/C4-PlantumlSkin/master/build/output/c4.puml

title Container diagram for Equinox.MemoryStore
caption High level layout of an integration test scenario using MemoryStore in lieu of a Durable Store

actor "Integration\nTests" <<Person>> as tests

rectangle "Equinox.MemoryStore" <<Container>> {
    rectangle eqxms <<Component>> [
        Equinox.MemoryStore
    ]
}

rectangle "System Under Test + Simulators" <<Container>> {
    database caches <<Container>> [
        **Read Model Simulators**
        **and/or Concrete Stores**
    ]
    rectangle "Application Under Test" <<Container>> as aggregate {
        rectangle aggregate1 <<Component>> [
            Aggregate / Service 1
        ]
        rectangle aggregate2 <<Component>> [
            Aggregate / Service 2
        ]
    }
    rectangle ingesters <<Container>> [
        **Ingesters Under Test**
    ]
    rectangle inputs <<External Component>> [
        **Input Simulators**
    ]
    rectangle reactors <<Container>> [
        **Reactors Under Test**
    ]
}

tests     <-->  aggregate   : transact\nagainst
tests     <-R-  caches      : may probe\neventually\nconsistent
tests       --> eqxms       : may validate\nby probing

aggregate <.R.> eqxms       : Transact/\nQuery

ingesters  -U-> aggregate1  : run transactions against
ingesters  -U-> caches      : maintain\nviews\nin
ingesters <.L.  inputs      : feed into

reactors  <-U-  eqxms       : can subscribe to\n(TODO)
reactors  <-U-> aggregate2  : run transactions against
reactors   -U-> caches      : maintain\nviews\nin

@enduml
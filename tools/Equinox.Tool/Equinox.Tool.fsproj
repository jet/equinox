<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>netcoreapp3.1;net461</TargetFrameworks>
    <OutputType>Exe</OutputType>
    <AutoGenerateBindingRedirects>true</AutoGenerateBindingRedirects>
    <WarningLevel>5</WarningLevel>
    <IsTestProject>false</IsTestProject>
    <DisableImplicitFSharpCoreReference>true</DisableImplicitFSharpCoreReference>
    <DisableImplicitSystemValueTupleReference>true</DisableImplicitSystemValueTupleReference>
    <DefineConstants Condition=" '$(TargetFramework)' == 'net461' ">$(DefineConstants);NET461</DefineConstants>

    <PackageId>Equinox.Tool</PackageId>
    <AssemblyName>eqx</AssemblyName>

    <!-- workaround for not being able to make Backend and Domain as inlined in a complete way https://github.com/nuget/home/issues/3891#issuecomment-377319939 -->
    <TargetsForTfmSpecificBuildOutput>$(TargetsForTfmSpecificBuildOutput);CopyProjectReferencesToPackage</TargetsForTfmSpecificBuildOutput>
  </PropertyGroup>

  <ItemGroup>
    <Compile Include="Infrastructure\Infrastructure.fs" />
    <Compile Include="Infrastructure\HttpHelpers.fs" />
    <Compile Include="StoreClient.fs" />
    <Compile Include="TodoClient.fs" />
    <Compile Include="Tests.fs" />
    <Compile Include="Program.fs" />
  </ItemGroup>

  <ItemGroup>
    <!-- workaround for not being able to make Backend and Domain as inlined in a complete way https://github.com/nuget/home/issues/3891#issuecomment-377319939 -->
    <ProjectReference Include="..\..\samples\TodoBackend\TodoBackend.fsproj" PrivateAssets="all" />
    <ProjectReference Include="..\..\samples\Store\Backend\Backend.fsproj" PrivateAssets="all" />
    <ProjectReference Include="..\..\samples\Store\Domain\Domain.fsproj" PrivateAssets="all" />
    <ProjectReference Include="..\..\samples\Infrastructure\Infrastructure.fsproj" PrivateAssets="all" />
    <ProjectReference Include="..\Equinox.Tools.TestHarness\Equinox.Tools.TestHarness.fsproj" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="MinVer" Version="2.0.0" PrivateAssets="All" />

    <!--See Infrastructure.fsproj-->
    <PackageReference Include="FSharp.Core" Version="4.3.4" />

    <PackageReference Include="Serilog.Sinks.Console" Version="3.1.1" />
    <PackageReference Include="Serilog.Sinks.Seq" Version="4.0.0" />
  </ItemGroup>

  <!-- bundle the net461 exe inside the .net core tool package -->
  <PropertyGroup Condition=" '$(PackAsTool)' == 'true' ">
    <TargetFrameworks></TargetFrameworks>
    <TargetFramework>netcoreapp3.1</TargetFramework>
  </PropertyGroup>

  <ItemGroup Condition=" '$(PackAsTool)' == 'true' ">
    <Content Include="$(ThisDirAbsolute)/bin/equinox-tool/net461/*">
      <Pack>true</Pack>
      <PackagePath>tools\net461\any\%(Filename)%(Extension)</PackagePath>
      <Visible>true</Visible>
    </Content>
  </ItemGroup>

  <!-- workaround for not being able to make Backend and Domain as inlined in a complete way https://github.com/nuget/home/issues/3891#issuecomment-377319939 -->
  <Target Name="CopyProjectReferencesToPackage" DependsOnTargets="ResolveReferences">
    <ItemGroup>
      <BuildOutputInPackage Include="@(ReferenceCopyLocalPaths -> WithMetadataValue('ReferenceSourceTarget', 'ProjectReference'))" />
    </ItemGroup>
  </Target>

</Project>